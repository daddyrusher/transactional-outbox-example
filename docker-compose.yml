version: '3.8'
services:
  kafka:
    image: bitnami/kafka:4.0.0
    ports:
      - "9092:9092"
      # Контроллер слушает на порту 9093 (используется внутри кластера)
      - "9093:9093"
    environment:
      # Указываем, что нода выполняет роли брокера и контроллера
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_NODE_ID: 1
      # Формат: id@host:port – для одного контроллера достаточно одной записи
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      ALLOW_PLAINTEXT_LISTENER: "yes"
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --list || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  postgres:
    image: postgres:17.4-alpine
    environment:
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo
      POSTGRES_DB: orders
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  order-service:
    build: ./order-service
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_healthy
      tempo:
        condition: service_started
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo
      POSTGRES_DB: orders
      KAFKA_BROKER: kafka:9092
      TEMPO_ENDPOINT: tempo:4318
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    ports:
      - "8080:8080"

  order-processor:
    build: ./order-processor
    depends_on:
      kafka:
        condition: service_healthy
      tempo:
        condition: service_started
    environment:
      KAFKA_BROKER: kafka:9092
      TEMPO_ENDPOINT: tempo:4318
    ports:
      - "8081:8081"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  tempo:
    image: grafana/tempo:2.7.2
    volumes:
      - ./tempo.yml:/etc/tempo.yml
    command:
      - --config.file=/etc/tempo.yml
    ports:
      - "3200:3200"
      - "4317:4317"
    restart: always
    depends_on:
      - kafka

volumes:
  pgdata:
